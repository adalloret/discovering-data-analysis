# -*- coding: utf-8 -*-
"""Sprint_6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-v0lIfrJQ6-8sCMujDhI4H9hV591jd5Y
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from scipy import stats as st
pd.options.mode.copy_on_write = True

"""# Paso 1: Lectura de datos"""

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('games.csv')

"""# Paso 2: Preparar datos"""

# Reemplazar nombres de las columnas por minúsculas
new_col_names = []

for old_name in df.columns:
  clean_names = old_name.lower()
  new_col_names.append(clean_names)

df.columns = new_col_names

print(df)
df.info()

"""### Valores ausentes"""

# Tratar valores ausentes categóricos
df['name'] = df['name'].fillna('Unknown')
df['genre'] = df['genre'].fillna('Unknown')
df['rating'] = df['rating'].fillna('No Rating')

# Tratar valores ausentes numéricos
## En la columna de 'year_of_release' reemplazar con un 0 generaría un año ficticio y un outlier artificial que puede afectar el análisis
## para evitar esto, relleno los nulos con la mediana
df['year_of_release'] = df['year_of_release'].fillna(df['year_of_release'].median())

## En la columna 'critic_score' reemplazar con un 0 no tiene sentido, pero tampoco usando algún estadístico, ya que, que no haya calificación
## ya es un dato importante en sí. En esta columna dejaré los nulos sin tratar.

## En la columna 'user_score' tenemos datos mixtos, números de tipo object, texto (tbd) y nulos, en este caso, es importante
## separar los tbd del resto de la columna.
df['is_user_score_tbd'] = df['user_score'] == 'tbd'

# Replace 'tbd' values in 'user_score' with NaN before converting to numeric
# Reemplazaré los valores 'tbd' en la columna 'user_score' con NaN antes de convertir la columna a numérico
df['user_score'] = pd.to_numeric(df['user_score'], errors='coerce')

df.info

"""### Convertir al tipo de dato necesario"""

# Transformo el tipo de dato de la columna 'year_of_release' de float a Int64, los años son números enteros y no es necesario
# que tengan decimales
df['year_of_release'] = df['year_of_release'].astype('Int64')

# Antes de transformar las columna 'critic_score' hay que verificar si es seguro transformarla al tipo entero o si perderemos algo en la transformación
print(np.array_equal(df['critic_score'], df['critic_score'].astype('Int64')))

# No es seguro transformar a entero, el tipo de dato debe permanecer como float

"""### Calcular ventas totales"""

# Calcula las ventas totales (la suma de las ventas en todas las regiones) para cada juego y coloca estos valores en una columna separada.
df['total_sales'] = df['na_sales'] + df['eu_sales'] + df['jp_sales'] + df['other_sales']

"""# Paso 3. Analiza los datos

### Mira cuántos juegos fueron lanzados en diferentes años. ¿Son significativos los datos de cada período?
"""

games_per_year = (
    df.groupby('year_of_release')['name']
      .count()
      .reset_index()
      .rename(columns={'year_of_release': 'year_of_release', 'name': 'number_of_games'})
      .sort_values('year_of_release')
)

print(games_per_year)

games_per_year.plot(
    kind='line',
    figsize=(12,6),
    x='year_of_release',
    xlabel='Año de lanzamiento',
    y='number_of_games',
    ylabel='Número de juegos',
    title='Número de juegos lanzados por año',
    legend=False,
    grid=True,
    color='#69DDFF'
)

"""Los datos demuestran que la mayor cantidad de videojuegos lanzados ocurrió después de la decada del 2000 hasta el 2010, cayendo de nuevo pero nunca produciéndose tan pocos videojuegos como antes del 2000.

El año con mayor producción de videojuegos fue el 2007 (1466), y el año con menor producción de videojuegos fue el 1980 (9) que es el primer año del que se tiene registro.

### Observa cómo varían las ventas de una plataforma a otra. Elige las plataformas con las mayores ventas totales y construye una distribución basada en los datos de cada año. Busca las plataformas que solían ser populares pero que ahora no tienen ventas. ¿Cuánto tardan generalmente las nuevas plataformas en aparecer y las antiguas en desaparecer?
"""

sales_per_platform = (
    df.groupby('platform')['total_sales']
      .sum()
      .reset_index()
      .rename(columns={'platform': 'platform', 'total_sales': 'total_sales'})
      .sort_values('total_sales', ascending=False)
)

print(sales_per_platform)

sales_per_platform.plot(
    kind='bar',
    figsize=(12,6),
    x='platform',
    xlabel= 'Plataforma',
    y='total_sales',
    ylabel='Número de ventas',
    title='Número de ventas por plataforma',
    legend=False,
    grid=True,
    color='#69DDFF'
)

# Mostrar el top 10 de las plataformas más vendidas
sales_per_platform_10 = sales_per_platform.head(10)

# Agrupar por año y por plataforma
platforms_per_year = (
    df.groupby(['year_of_release', 'platform'])['total_sales'].sum()
    .reset_index()
    .sort_values('platform', ascending=False)
)

# Unir el top 10 de las plataformas con más ventas con la agrupación de las plataformas por año
top_10 = sales_per_platform_10[['platform']].merge(
    platforms_per_year,
    on='platform',
    how='inner'
)

# Mostrar el top 10 de ventas por año
print(top_10.head(50))

plt.figure(figsize=(12,6))
sns.lineplot(
    data=top_10,
    x='year_of_release',
    y='total_sales',
    hue='platform',
    marker='o'
)

plt.title("Historico de ventas de las 10 mejores plataformas")
plt.xlabel("Año de lanzamiento")
plt.ylabel('Ventas totales (Millones)')
plt.legend(title="Plataforma")
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()

"""*   Elegí las 10 plataformas más populares.
*  PC no ha tenido más de 50 millones de ventas por año pero desde 1985 hasta 2015 es la única plataforma que aún sigue vigente.
*   Cada plataforma dura aproximadamente 10 años en vigencia hasta que una nueva consola aparece
*   PS2 ha sido la consola con más ventas históricamente, sus ventas disminuyeron drásticamente luego de la aparición de la Wii y la PS3 en el 2007
*   La consola con más ventas en el 2015 fue la PS4

### Determina para qué período debes tomar datos. Para hacerlo mira tus respuestas a las preguntas anteriores. Los datos deberían permitirte construir un modelo para 2017.

*   Las plataformas tienen un ciclo de vida de 10 años
*   Los datos de antes del 2010 son muy diferentes a las tendencias actuales
*   Los datos de 2016 están incompletos, no hay suficientes datos de este año y podría sesgar el análisis
* Xbox PlayStation y Nintendo son las 3 Empresas más relevantes en la industria.

Usaré los datos de la PS4, Xbox360, Wii y PC durate el período 2010 - 2015 para predecir 2017
"""

# Selecciono las 4 plataformas más relevantes a partir del 2010

df_new = df[(df['year_of_release'] > 2009) & (df['year_of_release'] < 2016)]

df_new = df_new[df_new['platform'].isin(['PS4', 'Wii', 'X360', 'PC'])]

df_new

"""### Crea un diagrama de caja para las ventas globales de todos los juegos, desglosados por plataforma. ¿Son significativas las diferencias en las ventas? ¿Qué sucede con las ventas promedio en varias plataformas? Describe tus hallazgos."""

df_new_per_platform = (
    df_new.groupby('platform')['total_sales'].sum()
    .reset_index()
    .sort_values('total_sales', ascending=False)
)

df_new_per_platform

plt.figure(figsize=(8,6))

sns.barplot(
    data=df_new_per_platform,
    x='platform',
    y='total_sales',
    color='#69DDFF'
)

plt.title('Ventas totales por plataforma (2010-2015)')
plt.xlabel('Plataforma')
plt.ylabel('Ventas totales (Millones)')
plt.show()

plt.figure(figsize=(12,8))
df_new.boxplot(column="total_sales", by="platform")
plt.title("Distribución de ventas por plataforma (2010-2015)")
plt.suptitle('')
plt.xlabel("Plataforma")
plt.ylabel("Ventas (Millones)")
plt.tight_layout()
plt.show()

"""El rango intercuártilico de la PS4 es más amplio, lo que indica mayor variabilidad en la venta de sus títulos.

Los boxplots muestran medianas similares, pero las colas (outliers) son muy distintas. X360 y PS4 tienen títulos con ventas mucho más altas que Wii y PC. Eso marca una diferencia en el impacto de ciertos juegos.

Las medianas de las plataformas son muy similares, esto demuestra que la mayoría de sus títulos en ventas se comportan de maneras muy parecidas.

### Mira cómo las reseñas de usuarios y profesionales afectan las ventas de una plataforma popular (tu elección). Crea un gráfico de dispersión y calcula la correlación entre las reseñas y las ventas. Saca conclusiones.
"""

x360_data = df_new[df_new['platform'] == 'X360']
# Creo una nueva columna para estandarizar los puntajes.
x360_data['user_score_10'] = x360_data['user_score'] * 10

# Creo una nueva columna en donde se encuentre el puntaje promedio
x360_data['avg_score'] = x360_data[['user_score_10', 'critic_score']].mean(axis=1)

x360_data

# Correlación X360
correlation_x360 = x360_data[['avg_score', 'total_sales']].corr()
correlation_x360

"""La correlación es positiva, pero es debil. Lo que indica que los puntajes no afectan tanto la variabilidad en ventas. Es probable que otros factores como marketing, franquicias y popularidad tengan un mayor efecto en ventas que el puntaje."""

plt.figure(figsize=(8,6))
sns.scatterplot(
    data= x360_data,
    x='total_sales',
    y='avg_score',
    size='total_sales',
    hue='total_sales',
    sizes=(20, 200),
    palette='viridis',
    alpha=0.7
)

plt.title("X360: Calificación promedio vs. Ventas")
plt.xlabel("Ventas (Millones)")
plt.ylabel("Calificación promedio")
plt.show()

"""### Teniendo en cuenta tus conclusiones compara las ventas de los mismos juegos en otras plataformas."""

games_on_4_platforms = (
    df_new.groupby('name')['platform']
    .nunique()
    .reset_index()
    .query('platform == 4')
)

games_on_4_platforms
games_on_4_platforms_merged = games_on_4_platforms.merge(
    df_new,
    on='name',
    how='inner'
)

games_on_4_platforms_merged['user_score_10'] = (games_on_4_platforms_merged['user_score'] * 10)

games_on_4_platforms_merged['avg_score'] = games_on_4_platforms_merged[['critic_score', 'user_score']].mean(axis=1)

games_on_4_platforms_merged = games_on_4_platforms_merged.drop('platform_x', axis=1)

games_on_4_platforms_merged.rename(columns={'platform_y': 'platform'}, inplace=True)

games_on_4_platforms_merged

colors = {
    'X360': '#87FF65',
    'PS4': '#256EFF',
    'PC': '#F7D488',
    'Wii': '#FF495C'
}

plt.figure(figsize=(8,6))
sns.scatterplot(
    data=games_on_4_platforms_merged,
    x='total_sales',
    y='avg_score',
    hue='platform',
    palette=colors,
    s=80
)

plt.title("Cómo afectan las calificaciones a las ventas de Fifa 14 y Fifa 15")
plt.xlabel("Ventas (Millones)")
plt.ylabel("Calificación promedio")
plt.legend(title="Plataforma")
plt.show()

"""A pesar de que son los mismos juegos, es evidente que el éxito depende de la plataforma que se elija para la compra.
* PS4 y X360 lideran la lista, con una calificación promedio por encima de los 40 puntos y entre 3 a 6 millones de ventas.
* Las plataformas con peor recepción son PC y Wii. Wii es la última en la lista, con calificaciones por debajo de los 10 puntos y menos de un millón de ventas. A pesar de que para PC tenemos calificaciones promedio de más de 40 puntos, las ventas no mejoran mucho, con también menos de 1 millón de ventas por cada juego. Esto demuestra que no siempre una buena calificación garantiza muchas ventas.

### Echa un vistazo a la distribución general de los juegos por género. ¿Qué se puede decir de los géneros más rentables? ¿Puedes generalizar acerca de los géneros con ventas altas y bajas?
"""

# Géneros más rentables vs menos rentables

df_new_genre = (
    df_new.groupby('genre')['total_sales'].sum()
    .reset_index()
    .sort_values(by='total_sales', ascending=False)
)
print('Géneros más rentables')
print(df_new_genre.head())
print('')
print('Géneros menos rentables')
print(df_new_genre.tail())
print('')
print('')

# Géneros más rentables vs menos rentables por plataforma

df_new_genre_platform = (
    df_new.groupby(['genre', 'platform'])['total_sales'].sum()
    .reset_index()
    .sort_values(by='total_sales', ascending=False)
)
print('Géneros más rentables por plataforma')
print(df_new_genre_platform.head(20))
print('')
print('Géneros menos rentables por plataforma')
print(df_new_genre_platform.tail())

# Géneros de videojuegos y sus ventas
plt.figure(figsize=(8,6))
sns.barplot(
    data=df_new_genre,
    x='genre',
    y='total_sales',
    color='#69DDFF'
)

plt.xticks(rotation=90)
plt.title("Géneros de videojuegos y sus ventas (2010-2015)")
plt.xlabel("Género")
plt.ylabel("Ventas totales (Millones)")
plt.show()

# Géneros de videojuegos y sus ventas por plataforma
plt.figure(figsize=(8,6))
sns.barplot(
    data=df_new_genre_platform,
    x='genre',
    y='total_sales',
    hue='platform',
    palette=colors
)

print('')

plt.xticks(rotation=90)
plt.title("Géneros de videojuegos y sus ventas por plataforma (2010-2015)")
plt.xlabel("Género")
plt.ylabel("Ventas totales (Millones)")
plt.legend(title='Plataforma')
plt.show()

"""Echa un vistazo a la distribución general de los juegos por género. ¿Qué se puede decir de los géneros más rentables? ¿Puedes generalizar acerca de los géneros con ventas altas y bajas?

**Disitribución general de los juegos por género:**
* Los juegos de acción son los que más se venden con 287.91 millones de ventas, le siguen los juegos de disparos con 251.44 millones de ventas.
* En general, los 3 géneros que más ventas generan son: accióm, disparos y deportes.

**Disitribución de los juegos por género y plataforma:**
 Cuando hablamos de plataformas podemos diferenciar cuál es el género que más se vende dependiendo de la plataforma.
* En X360 el género que más se vende es 'Shooter' con 159.66 millones de ventas, esto quiere decir que de las ventas del género 'Shooter' el 63.49% se realizaron a través de la plataforma X360.
* La PS4 no logra liderar ningún género, sin embargo, el género que más vende es acción con hasta 81.52 millones de ventas. Esto representa solo el 28.22% de las ventas generales de este género.
* La Wii, en cambio, es la plataforma que más videojuegos vende del género 'Misc', un género bastante variado que incluye juegos que se centran en la relajación y la no violencia, esto probablemente porque la Wii es una consola que suele ser usada en su mayoría por niños. La Wii ha vendido 86.83 millones de juegos del género y ninguna otra plataforma ha logrado tantos números en este género. Wii se lleva más de la mitad de las ventas con un 55.76% de las ventas totales del género.
* Por último, PC, es la plataforma que lidera dos géneros diferentes: estrategia y simulación. Esto probablemente debido a las mecánicas de juego que ofrece la PC en comparación a otras plataformas. Se han vendido 16.66 millones de juegos del género 'Estrategia' y 14.63 millones de 'Simulación'

# Paso 4. Crea un perfil de usuario para cada región

### Perfil de usuario para Norte América
"""

# Las cinco plataformas principales. Describe las variaciones en sus cuotas de mercado de una región a otra.
# Los cinco géneros principales. Explica la diferencia.
# Si las clasificaciones de ESRB afectan a las ventas en regiones individuales.


# Cinco plataformas principales
user_profile_na = df[['platform', 'na_sales', 'genre', 'rating', 'name']]

na_best_platforms = (
    user_profile_na.groupby('platform')['na_sales'].sum()
    .reset_index()
    .sort_values(by='na_sales', ascending=False)
)

top_5_na_best_platforms = na_best_platforms['platform'].head().reset_index(drop=True)
print(f'Las 5 plataformas principales en Norte América:\n\n{top_5_na_best_platforms}')
print('')

# Cinco géneros principales
na_best_genres = (
    user_profile_na.groupby('genre')['na_sales'].sum()
    .reset_index()
    .sort_values(by='na_sales', ascending=False)
)

top_5_na_best_genres = na_best_genres['genre'].head().reset_index(drop=True)
print(f'Los 5 géneros principales en Norte América:\n\n{top_5_na_best_genres}')
print('')

# Relación entre puntaje ESRB y ventas
na_sales_and_rating = (
    user_profile_na.groupby('rating')['na_sales'].sum()
    .reset_index()
    .sort_values(by='na_sales', ascending=False)
)

print(f'Rating vs Ventas en Norte América:\n\n{na_sales_and_rating}')

# Gráfica relación puntaje ESRB y ventas

plt.figure(figsize=(8,6))

sns.barplot(
    data=na_sales_and_rating,
    x='rating',
    y='na_sales',
    color='#0353A4'
)

plt.title('Clasificación ESRB y su relación con las ventas en Norteamérica')
plt.xlabel("Clasificacón")
plt.ylabel("Ventas totales (Millones)")
plt.show()

"""En Norte América, la consola más vendida es X360, el género más vendido es acción   y el rating E (Everyone) es el que mas ventas genera probablemente porque abarca un publico mas grande que los otros géneros. En este caso son 1242.46 millones de ventas generadas por juegos sin clasificación.

### Perfil de usuario para Japón
"""

# Cinco plataformas principales
user_profile_jp = df[['platform', 'jp_sales', 'genre', 'rating', 'name']]

jp_best_platforms = (
    user_profile_jp.groupby('platform')['jp_sales'].sum()
    .reset_index()
    .sort_values(by='jp_sales', ascending=False)
)

top_5_jp_best_platforms = jp_best_platforms['platform'].head().reset_index(drop=True)
print(f'Las 5 plataformas principales en Japón\n\n{top_5_jp_best_platforms}')
print('')

# Cinco géneros principales
jp_best_genres = (
    user_profile_jp.groupby('genre')['jp_sales'].sum()
    .reset_index()
    .sort_values(by='jp_sales', ascending=False)
)

top_5_jp_best_genres = jp_best_genres['genre'].head().reset_index(drop=True)
print(f'Los 5 géneros principales en Japón\n\n{top_5_jp_best_genres}')
print('')

# Relación entre puntaje ESRB y ventas
jp_sales_and_rating = (
    user_profile_jp.groupby('rating')['jp_sales'].sum()
    .reset_index()
    .sort_values(by='jp_sales', ascending=False)
)

print(f'Rating vs Ventas en Japón\n\n{jp_sales_and_rating}')

# Gráfica relación puntaje ESRB y ventas

plt.figure(figsize=(10,8))

sns.barplot(
    data=jp_sales_and_rating,
    x='rating',
    y='jp_sales',
    color='#C52233'
)

plt.title('Clasificación ESRB y su relación con las ventas en Japón')
plt.xlabel("Clasificacón")
plt.ylabel("Ventas totales (Millones)")
plt.show()

"""En Japón la consola más vendida es la DS, el género más vendido es Role-Playing  y el rating 'No Rating' es el que mas ventas genera, parece ser que hay  un error en la ingesta de datos, ya que aún hay muchos datos sin clasificación. En este caso son 841.96 millones de ventas las que han generado juegos sin clasificación.

### Perfil de usuario para Europa
"""

# Cinco plataformas principales
user_profile_eu = df[['platform', 'eu_sales', 'genre', 'rating', 'name']]

eu_best_platforms = (
    user_profile_eu.groupby('platform')['eu_sales'].sum()
    .reset_index()
    .sort_values(by='eu_sales', ascending=False)
)

top_5_eu_best_platforms = eu_best_platforms['platform'].head().reset_index(drop=True)
print(f'Las 5 plataformas principales en Europa\n\n{top_5_eu_best_platforms}')
print('')

# Cinco géneros principales
eu_best_genres = (
    user_profile_eu.groupby('genre')['eu_sales'].sum()
    .reset_index()
    .sort_values(by='eu_sales', ascending=False)
)

top_5_eu_best_genres = eu_best_genres['genre'].head().reset_index(drop=True)
print(f'Los 5 géneros principales en Europa\n\n{top_5_eu_best_genres}')
print('')

# Relación entre puntaje ESRB y ventas
eu_sales_and_rating = (
    user_profile_eu.groupby('rating')['eu_sales'].sum()
    .reset_index()
    .sort_values(by='eu_sales', ascending=False)
)

print(f'Rating vs Ventas en Europa\n\n{eu_sales_and_rating}')

# Gráfica relación puntaje ESRB y ventas

plt.figure(figsize=(10,8))

sns.barplot(
    data=eu_sales_and_rating,
    x='rating',
    y='eu_sales',
    color='#15B097'
)

plt.title('Clasificación ESRB y su relación con las ventas en Europa')
plt.xlabel("Clasificacón")
plt.ylabel("Ventas totales (Millones)")
plt.show()

"""En Europa la consola más vendida es la PS2, el género más vendido es Acción  y el rating 'E' es el que mas ventas genera, parece ser que hay  un error en la ingesta de datos, ya que aún hay muchos datos sin género. En este caso son 613.83 millones de ventas generadas por juegos sin clasificación.

#Paso 5. Prueba las siguientes hipótesis:

### Las calificaciones promedio de los usuarios para las plataformas Xbox One y PC son las mismas.
"""

# H0 = µXone = µPC
# Basándome en los resultados obtenidos anteriormente, es más probable que los usuarios de XOne califiquen
# mejor que los usuarios de PC, es con estos datos que formularé mi hipótesis alternativa.


xone_user_score = (df.loc[df['platform'] == 'XOne', 'user_score']).dropna()
pc_user_score = (df.loc[df['platform'] == 'PC',   'user_score']).dropna()

alpha = 0.05

res = st.ttest_ind(xone_user_score, pc_user_score)

print(f'Valor p: {res.pvalue:.10f}')

if res.pvalue < alpha:
  print('Rechazamos la hipótesis nula, la probabilidad de que ocurra H0 es muy baja\n\nHipótesis alternativa:\nH1 = μXOne > μPC')
else:
  print(
    "No podemos rechazar la hipótesis nula, el promedio es muy similar"
)

"""### Las calificaciones promedio de los usuarios para los géneros de Acción y Deportes son diferentes."""

# H0 = µAcción = µDeportes
# Los géneros acción y deportes son los que más venden por lo que sus calificaciones pueden ser similares

action_user_score = (df.loc[df['genre'] == 'Action', 'user_score']).dropna()
sports_user_score = (df.loc[df['genre'] == 'Sports', 'user_score']).dropna()

alpha = 0.05

res = st.ttest_ind(action_user_score, sports_user_score)

print(f'Valor p: {res.pvalue:.10f}')

if res.pvalue < alpha:
  print('Rechazamos la hipótesis nula, la probabilidad de que ocurra H0 es muy baja\n\nHipótesis alternativa:\nH1: µAcción > µDeportes')
else:
  print('No podemos rechazar la hipótesis nula, el promedio es muy similar')

"""### — Cómo formulaste las hipótesis nula y alternativa.
### — Qué criterio utilizaste para probar las hipótesis y por qué.

Las hipótesis  nulas siempre deben de ser igualdades, para ambos casos, el umbral alfa era 0.05 ya que es lo más común y efectivo, las hipótesis nulas las generé basándome en los datos obtenidos durante todo el análisis estadístico.

#Paso 6. Escribe una conclusión general

Las ventas de videojuegos al rededor del mundo son muy variadas, no se venden ni los mismo géneros ni las mismas consolas ni en la misma frecuencia.

**1. Consolas más vendidas**
Los datos mostraron con claridad que las consolas/plataformas duran en promedio 10 años en el mercado, suelen ser reemplazadas con una versión mejorada de ellas mismas o de la competencia. La única consola/plataforma que se encuentra vigente desde 1985 hasta 2015 es la PC esto porque con el paso de los años, los datos que tenemos sobre la PC son muy generales, no distinguen de marcas o versiones. A pesar de esto, siempre ay 3 plataformas más que siempre puntean en el mercado, las empresas desarrolladores son aquellas que fabrican todas las versiones de Nintendo, PlayStation y Xbox.

**2. Géneros más vendidos**
Los géneros más vendidos son: acción, deportes y disparos, estos géneros son una constante en todo el mundo, aunque en Japón los más vendidos son juegos de Rol.

**3. Relación entre puntaje y ventas**
No existe una relación muy alta entre puntaje de usuarios y crítica con las ventas, esto puede deberse a que muchas de las ventas se esperan con anticipación cuando hacen parte de una gran franquicia como Halo, Mario Bros. o GTA. Por lo que el público ya está asegurado sin importar las calificaciones, esto y una buena estrategia de marketing puede asegurar más ventas que las buenas calificaciones. Pero aquellos juegos que se encuentren por debajo del puntaje promedio sí tienen menos ventas, probablemente porque son menos conocidos y las pocas reseñas que tienen afectan mucho más.

Históricamente la región y el género que más ventas han generado es Norteamérica con juegos de acción clasificación E, por lo que un juego que caiga dentro de estas categorías puede ser un éxito en Norteamérica.
"""